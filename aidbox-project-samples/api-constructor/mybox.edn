{ns mybox
 import #{aidbox aidbox.rest aidbox.rest.v1 aidbox.rest.acl}

 ;; Share User Specific Data
 access-api
 {:zen/tags #{aidbox.rest/api}
  "Patient" {:GET   pt-search-op
             [:id]  {:GET    read-patient-by-org}}}

 ;; Middlewares
 ;; Ensure that user.data.org-id is equal route-params.id
 id-org-match-mw
 {:zen/tags #{aidbox.rest/middleware}
  :engine aidbox.rest.v1/match-middleware
  :match {:org-id {:target   [:route-params :id]}}}

 ;; Operations
 ;; Patient operations
 pt-org-id-param
 {:zen/tags #{aidbox.rest.acl/request-param}
  :path          [:user :data :org-id]
  :source-schema {:type zen/string}}

 read-patient-by-org
 {:zen/tags #{aidbox.rest/op}
  :engine aidbox.rest.acl/read
  :resource "Patient"
  :format   "fhir"
  :filter   patient-filter}

 patient-filter
 {:zen/tags   #{aidbox.rest.acl/filter}
  :expression patient-condition}

 patient-condition
 {:zen/tags #{aidbox.rest.acl/sql-template}
  :params   {:org-id pt-org-id-param}
  :template "({{target-resource}}#>>'{identifier}')::jsonb @> '[{\"system\": \"Organization\", \"value\": \"{{params.org-id}}\"}]'::jsonb"}

 api
 {:zen/tags #{aidbox.rest/api}
  "access"  {:apis #{access-api}}}

 server
 {:zen/tags #{aidbox/service}
  :engine   aidbox/http
  :apis     #{api}}

 box
 {:zen/tags #{aidbox/system}
  :zen/desc "test server"
  :services {:http server}}

 }
